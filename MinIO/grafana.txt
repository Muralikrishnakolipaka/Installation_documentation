Monitoring MinIO with prometheus and grafana


Prerequisites :
  1. An existing Prometheus deployment with backing Alert Manager

  2. An existing MinIO deployment with network access to the Prometheus deployment Grafana installed

Run below command on MinIO master 

   mc admin prometheus generate <alias> [METRIC-TYPE]

   Metrics-type --->> cluster, node, bucket and resource

Once run above command you will see output below like

scrape_configs:
- job_name: minio-job-bucket
  bearer_token: eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJwcm9tZXRoZXVzIiwic3ViIjoibWluaW9hZG1pbiIsImV4cCI6NDg3Mzc2MTYyM30.csVQPIkGDrvg6P5rKJLlCrOpK3_JJsqlkdkLeEXdDPjs5U9_FOVCjsIv45BRvBu2ILlQpEJMAfTkYm1pXugb6w
  metrics_path: /minio/v2/metrics/bucket
  scheme: http
  static_configs:
  - targets: ['<IP_ADDRESS>:9000']

Add following properties in all minio nodes (/etc/default/minio)


    MINIO_PROMETHEUS_AUTH_TYPE=jwt
    MINIO_PROMETHEUS_JOB_ID=minio-job
    MINIO_PROMETHEUS_AUTH_TOKEN=<Copy_bearer_token>
    MINIO_PROMETHEUS_URL=http://<Prometheus_IP>:9090

Configuring Prometheus:

    Add following properties in promethues.yml file. Below properties are bucket level,cluster level,node level metrics

Cluster: 
 scrape_configs:
- job_name: minio-job
  bearer_token: <secret>
  metrics_path: /minio/v2/metrics/cluster
  scheme: http
  static_configs:
  - targets: ['<Prometheus_IP>:9000']

Bucket:

- job_name: minio-job-bucket
  bearer_token: <secret>
  metrics_path: /minio/v2/metrics/bucket
  scheme: http
  static_configs:
  - targets: ['<prometheus_IP>:9000']

Below two are optional 

Node:

- job_name: minio-job-node
  bearer_token: <secret>
  metrics_path: /minio/v2/metrics/node
  scheme: http
  static_configs:
  - targets: ['<Prometheus_IP>:9000']

Resource:

- job_name: minio-job-resource
  bearer_token: <secret>
  metrics_path: /minio/v2/metrics/resource
  scheme: http
  static_configs:
  - targets: ['<Prometheus_IP>:9000']

Then restart prometheus and Minio service


